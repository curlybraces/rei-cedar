@import '../../../css/settings/index.scss';
@import './vars/CdrRadio.vars.scss';
/* ==========================================================================
  # CdrRadio

  All values should map to variables in
  vars/CdrRadio.vars.pcss
  in order to allow for theming

  TOC:

    :Base - Radio
      :Elements
        :wrap
        :input
        :figure
      :States
      :Modifiers
        :compact
        :hide-figure
========================================================================== */

.cdr-radio {
  @include radio-text;

  position: relative;
  padding-left: calc(#{$radio-figure-size-medium} + #{$cdr-label-base-spacing});

  /* Elements
    ========================================================================== */

  /* Wrap
  ========== */
  &__wrap {
    /* get rid of inline-block whitespace from label element */
    font-size: 0;
    line-height: 1;
  }

  /* Input
  ========== */
  &__input {
    position: absolute;
    opacity: 0;
    z-index: -1;
  }

  /* Figure
  ========== */

  &__figure {
    position: absolute;
    top: $radio-figure-space-top;
    left: 0;
    width: $radio-figure-size-medium;
    height: $radio-figure-size-medium;
    border-radius: $radio-figure-radius;
    background-color: $radio-figure-background-color;
    border: 1px solid $radio-figure-border-color;

    &::after {
      content: '';
      position: absolute;
      width: $radio-figure-selected-size;
      height: $radio-figure-selected-size;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      border-radius: $radio-figure-radius;
    }
  }

  /* States
    ========================================================================== */

  /* Checked
  ========== */
  &__input:checked ~ &__figure {
    border-color: $radio-figure-checked-border-color;

    &::after {
      background-color: $radio-figure-checked-background-color;
    }
  }

  /* Hover */
  &:hover {
    & > .cdr-radio__figure {
      cursor: pointer;
      border-color: $radio-figure-hover-border-color;
      background-color: $radio-figure-hover-background-color;
    }

    & > .cdr-radio__content {
      @include cdr-label-hover-mixin;
    }

    & > .cdr-radio__input {
      /* Hover + Checked
      ========== */
      &:checked ~ .cdr-radio__figure {
        border-color: $radio-figure-checked-hover-border-color;

        &::after {
          background-color: $radio-figure-checked-hover-background-color;
        }
      }
    }
  }

  /* Disabled
  ========== */
  &__input:disabled {
    & ~ .cdr-radio__content {
      @include cdr-label-disabled-mixin;
    }

    & ~ .cdr-radio__figure {
      border-color: $radio-figure-disabled-border-color !important;
      background-color: $radio-figure-disabled-background-color !important;
      cursor: default;
    }

    /* Disabled + Checked
    ========== */
    &:checked {
      & ~ .cdr-radio__figure {
        &::after {
          background-color: $radio-figure-checked-disabled-background-color !important;
        }
      }
    }
  }

  /* Active
  ========== */
  &:active > .cdr-radio__figure {
    border-color: $radio-figure-active-border-color;
    background-color: $radio-figure-background-color;
  }

  /* Focus
  ========== */
  &__input:focus ~ .cdr-radio__figure {
    border-color: $radio-figure-focus-border-color;
    box-shadow: $radio-focus-outline;
  }

  /* Modifiers
    ========================================================================== */

  /* Compact
    ========== */

  &--compact {
    @include radio-text-compact;

    & > .cdr-radio__figure {
      top: $radio-compact-figure-space-top;
    }
  }

  /* Hide Figure
    ========== */

  &--hide-figure {
    padding-left: 0;

    & > .cdr-radio__figure {
      display: none;
    }
  }

  /* Sizes
    ========================================================================== */
    @include radio-small-mixin(&);

    @include radio-medium-mixin(&);
  
    @include radio-large-mixin(&);
  
    /* Breakpoint variants
  
    /* @xs
      0px - 767px
      ========== */
    @include xs-mq-only {
      @include radio-small-mixin(&, \@xs);
  
      @include radio-medium-mixin(&, \@xs);
  
      @include radio-large-mixin(&, \@xs);
    }
  
    /* @sm
      768px - 991px
      ========== */
    @include sm-mq-only {
      @include radio-small-mixin(&, \@sm);
  
      @include radio-medium-mixin(&, \@sm);
  
      @include radio-large-mixin(&, \@sm);
    }
  
    /* @md
      992px - 1199px
      ========== */
    @include md-mq-only {
      @include radio-small-mixin(&, \@md);
  
      @include radio-medium-mixin(&, \@md);
  
      @include radio-large-mixin(&, \@md);
    }
  
    /* @lg
      1200px and up
      ========== */
  
    @include lg-mq-only {
      @include radio-small-mixin(&, \@lg);
  
      @include radio-medium-mixin(&, \@lg);
  
      @include radio-large-mixin(&, \@lg);
    }
}
