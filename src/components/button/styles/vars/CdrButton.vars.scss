/*~~~~~~~~COLORS~~~~~~~~~~~~~~~~~~~~~*/
$cdr-button-primary-background-color: #3278ae;


// button-in-interacted-state
$cdr-button-primary-background-color-hover: #2b6692;
$cdr-button-primary-background-color-active: #2b6692;
$cdr-button-primary-background-color-focus: #2b6692;


// primary-button-disabled
$cdr-button-primary-background-color-disabled: #dadada;


// should this just be $cdr-color-text-primary-darkmode / #fafafa instead?
$cdr-button-primary-fill: #ffffff;
$cdr-button-primary-color: #ffffff;
$cdr-button-primary-fill-hover: #ffffff;
$cdr-button-primary-color-hover: #ffffff;
$cdr-button-primary-fill-active: #ffffff;
$cdr-button-primary-color-active: #ffffff;
$cdr-button-primary-fill-focus: #ffffff;
$cdr-button-primary-color-focus: #ffffff;
$cdr-button-primary-color-disabled: #ffffff;


// NOTE: all of the secondary colors corresponded to existing tokens.



/*~~~~~~~~BOX SHADOWS~~~~~~~~~~~~~~~~~~~~~*/

// We Probably shouldn't have specific
// `cdr-button-box-shadow` tokens for each of these cases,
// rather we should have one token that is `inset 0 0 0 1px`
//  which gets combined with other color tokens (which might be specific or generic)
// For example,
// box-shadow: $cdr-box-shadow-whatever $cdr-button-background-color
// box-shadow: $cdr-box-shadow-whatever $cdr-color-whatever-generic-token
// instead of
// box-shadow: $cdr-button-box-shadow-primary;



// primary static/hover/active/focus box shadow
// NOTE: same color value as button-in-interacted-state background color above
$cdr-button-primary-box-shadow: inset 0 0 0 1px #2b6692;
$cdr-button-primary-box-shadow-hover: inset 0 0 0 1px #2b6692;
$cdr-button-primary-box-shadow-active: inset 0 0 0 1px #2b6692;
$cdr-button-primary-box-shadow-focus: inset 0 0 0 1px #2b6692;

// primary disabled box shadow
$cdr-button-primary-box-shadow-disabled: inset 0 0 0 1px #b8b8b8;

// secondary static/hover/active/focus box shadow
$cdr-button-secondary-box-shadow-hover: inset 0 0 0 1px #616161;
$cdr-button-secondary-box-shadow: inset 0 0 0 1px #616161;
$cdr-button-secondary-box-shadow-active: inset 0 0 0 1px #616161;
$cdr-button-secondary-box-shadow-focus: inset 0 0 0 1px #616161;

// secondary disabled box shadow
// NOTE: same color as primary-button-disabled background color above
$cdr-button-secondary-box-shadow-disabled: inset 0 0 0 1px #dadada;


/*~~~~~~~~TYPE~~~~~~~~~~~~~~~~~~~~~*/

// since these type mixins are fully custom they could
// be turned into tokens, or they can just stay in this file.

@mixin cdr-button-base-text-mixin-small() {
  font-family: $cdr-font-family-sans;
  font-style: normal;
  font-weight: 500;
  letter-spacing: -.08px;
  font-size: 14px;
  line-height: 18px;
}

@mixin cdr-button-base-text-mixin-medium() {
  font-family: $cdr-font-family-sans;
  font-style: normal;
  font-weight: 500;
  letter-spacing: -.08px;
  font-size: 16px;
  line-height: 22px;
}

@mixin cdr-button-base-text-mixin-large() {
  font-family: $cdr-font-family-sans;
  font-style: normal;
  font-weight: 500;
  letter-spacing: -.08px;
  font-size: 18px;
  line-height: 24px;
}

/* start of mixin/component variables land */

@mixin cdr-button-base-mixin() {
  @include cdr-button-base-text-mixin-medium;

  border: none;
  border-radius: $cdr-radius-softer;
  cursor: pointer;
  display: inline-flex;
  outline: none;
  overflow: visible;
  padding: $cdr-space-inset-one-x-squish;
  text-align: left;
  text-decoration: none;
  text-transform: none;

  /* States
    ---------- */
  &:hover, &:active, &:focus {
    outline: none;
    outline-offset: 0;
    text-decoration: none;
  }

  &:focus {
    outline: $default-outline;
    outline-color: -webkit-focus-ring-color;
  }

  &[disabled] {
    cursor: not-allowed;
  }
}

@mixin cdr-button-base-icon-mixin() {
  align-self: center;
  margin-right: $cdr-space-quarter-x;
  fill: inherit;
}

@mixin cdr-button-primary-mixin() {
  background-color: $cdr-button-primary-background-color;
  box-shadow: $cdr-button-primary-box-shadow;
  color: $cdr-button-primary-color;
  fill: $cdr-button-primary-fill;

  /* States
    ---------- */

// TODO: combine hover/active/focus declarations as possible
  &:hover {
    background-color: $cdr-button-primary-background-color-hover;
    color: $cdr-button-primary-color-hover;
    box-shadow: $cdr-button-primary-box-shadow-hover;
    fill: $cdr-button-primary-fill-hover;
  }

  &:active {
    background-color: $cdr-button-primary-background-color-active;
    color: $cdr-button-primary-color-active;
    box-shadow: $cdr-button-primary-box-shadow-active;
    fill: $cdr-button-primary-fill-active;
  }

  &:focus {
    background-color: $cdr-button-primary-background-color-focus;
    color: $cdr-button-primary-color-focus;
    box-shadow: $cdr-button-primary-box-shadow-focus;
    fill: $cdr-button-primary-fill-focus;
  }

  &[disabled] {
    background-color: $cdr-button-primary-background-color-disabled;
    box-shadow: $cdr-button-primary-box-shadow-disabled;
    color: $cdr-button-primary-color-disabled;
    fill: $cdr-button-primary-color-disabled;
  }
}

@mixin cdr-button-secondary-mixin() {
  background-color: $cdr-color-background-lightest;
  box-shadow: $cdr-button-secondary-box-shadow;
  color: $cdr-color-text-primary-lightmode;
  fill: $cdr-color-text-primary-lightmode;

  /* States
  ---------- */

// TODO: combine hover/active/focus declarations as possible
  &:hover {
    background-color: $cdr-color-background-light;
    box-shadow: $cdr-button-secondary-box-shadow-hover;
    color: $cdr-color-text-primary-lightmode;
    fill: $cdr-color-text-primary-lightmode;
  }

  &:active {
    background-color: $cdr-color-background-light;
    box-shadow: $cdr-button-secondary-box-shadow-active;
    color: $cdr-color-text-primary-lightmode;
    fill: $cdr-color-text-primary-lightmode;
  }

  &:focus {
    background-color: $cdr-color-background-light;
    box-shadow: $cdr-button-secondary-box-shadow-focus;
    color: $cdr-color-text-primary-lightmode;
    fill: $cdr-color-text-primary-lightmode;
  }

  &[disabled] {
    background-color: $cdr-color-background-lightest;
    box-shadow: $cdr-button-secondary-box-shadow-disabled;
    color: $cdr-color-text-disabled-lightmode;
    fill: $cdr-color-text-disabled-lightmode;
  }
}

@mixin cdr-button-full-width-mixin() {
  width: 100% !important;
  justify-content: center;
}

@mixin cdr-button-icon-only-mixin() {
  background: none;
  border: none;
  border-radius: 50%;
  box-shadow: none;
  display: inline-block;
  padding: $cdr-space-inset-half-x;
  fill: $cdr-color-icon-emphasis-lightmode;

  &:hover, &:active, &:focus {
    background: $cdr-color-background-light;
    box-shadow: none;
    fill: $cdr-color-icon-emphasis-lightmode;
  }


  &[disabled] {
    background: transparent;
    box-shadow: none;
    fill: $cdr-color-text-disabled-lightmode;
  }
}

@mixin cdr-button-small-mixin() {
  @include cdr-button-base-text-mixin-small;
  padding: $cdr-space-inset-three-quarter-x-squish;
  width: auto;
}

@mixin cdr-button-has-icon-small-mixin {
  padding-left: calc(#{$cdr-space-three-quarter-x} - #{$cdr-space-quarter-x});
}

@mixin cdr-button-icon-small-mixin {
  /* This is to correct icon size vs line height */
  width: 20px;
  height: 20px;
}

@mixin cdr-button-medium-mixin() {
  @include cdr-button-base-text-mixin-medium;
  padding: $cdr-space-inset-one-x-squish;
  width: auto;
}

@mixin cdr-button-has-icon-medium-mixin {
  padding-left: calc(#{$cdr-space-one-x} - #{$cdr-space-quarter-x});
}

@mixin cdr-button-icon-medium-mixin {
  /* This is to correct icon size vs line height */
  width: $cdr-icon-size;
  height: $cdr-icon-size;
}

@mixin cdr-button-large-mixin() {
  @include cdr-button-base-text-mixin-large;
  padding: $cdr-space-inset-one-and-a-half-x-squish;
  width: auto;
}

@mixin cdr-button-has-icon-large-mixin {
  padding-left: calc(#{$cdr-space-one-and-a-half-x} - #{$cdr-space-quarter-x});
}

@mixin cdr-button-icon-large-mixin {
  /* This is to correct icon size vs line height */
  width: $cdr-icon-size;
  height: $cdr-icon-size;
}
