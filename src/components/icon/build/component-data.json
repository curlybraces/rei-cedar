{
	"name": "CdrIcon",
	"versions": [
		{
			"readme": "# <span class=\"display-name\">CdrIcon</span>\n\n## 3 ways to use icons\n \n`cdr-icon` can support 3 different ways of getting svg icons onto your page.\n \n### 1. SVG Sprite\n\n#### Option A: Inline symbol sprite\n \nRequires:\n \n* Icon sprite inlined on page\n \n#### Example: \n\nThe sprite needs to be available on any page where the icons will be used so it's best to do it at the base layout/index\n\n``` \n// Base view template (assuming .vue and vue-router) \n<template> \n  <div id=\"main\"> \n    <cdr-icon-sprite /> \n \n    <router-view></router-view> // rest of app\n  </div> \n</template> \n \n<script> \nimport { CdrIconSprite } from '@rei/cdr-icon';\n\n... \ncomponents: {\n  CdrIconSprite\n}\n... \n</script> \n \n// -----------------------------------------------------------------\n \n// Then in any descendant child component template\n<cdr-icon use=\"#caret-right\" />\n```\n\n#### Option B: External symbol defs\n \nRequires:\n \n* @rei/cdr-icon/sprite/cdr-icon-sprite.svg\n* A webpack loader to handle the asset (this example assumes `file-loader`)\n* A polyfill for external svg resource. Possibly `svgxuse` or `svg4everybody`\n \nWithin an individual component (you can probably come up with a better way to scale this if you need to do it in a lot of places): \n``` \n//  A .vue file \n \n<template> \n  ... \n  <cdr-icon :use=\"`${iconUrl}#caret-right`\" />\n  ... \n</template> \n \n<script> \n// import the sprite so file-loader will do its magic \n@import iconUrl from '@rei/cdr-assets/dist/cdr-icons.svg`; \n \nexport default { \n  ... \n  data() { \n    return { \n      iconUrl \n    }; \n  } \n} \n \n</script> \n``` \n \n### 2. Use individual icon components\n \n**This method will bloat your HTML if using a lot of icons.** \n \nThis is the easiest way to get an icon on your page. But use it carefully. \n \nRequirements: \n \n* Have `@rei/cdr-icon` installed \n \n#### Examples: \n \n``` \n<template>\n  ...\n    <icon-caret-right />\n    <icon-clock />\n  ...\n</template>\n\n<script>\nimport { IconCaretRight, IconClock } from '@rei/cdr-icon';\n\n...\n  components: {\n    IconCaretRight,\n    IconClock\n  }\n...\n\n</script>\n``` \n \n### 3. Use non cedar svg\n \n**This method will bloat your HTML if using a lot of icons.** \n \n`cdr-icon` is simply an svg (with some default attributes set -- mostly for a11y and styling) and a slot. Any svg markup can go inside of it. Any attributes added will simply override the defaults.\n \nRequirements: \n \nNone, but you might find the example below helpful. \n \n#### Examples: \n \n``` \n<template> \n  ... \n  <cdr-icon viewBox=\"0 0 30 30\">\n    <title>My icon</title>\n    <path d=\"M12 12c1.9329966 0 3.5-1.5670034 3.5-3.5C15.5 6.56700338 13.9329966 5 12 5S8.5 6.56700338 8.5 8.5c0 1.9329966 1.5670034 3.5 3.5 3.5zm6.7621385 7c-.8850139-2.8946791-3.5777143-5-6.7621387-5-3.1844245 0-5.87712493 2.1053209-6.76213876 5H18.7621385zM4 21c-.55228475 0-1-.4477153-1-1h-.00754862a9.07963802 9.07963802 0 0 1 .01314502-.1064258c.00185549-.0175393.0041644-.0349433.00691478-.0522001.43595408-3.2192393 2.56090871-5.9021068 5.45328094-7.1270196C7.26398091 11.7054407 6.5 10.191939 6.5 8.5 6.5 5.46243388 8.96243388 3 12 3c3.0375661 0 5.5 2.46243388 5.5 5.5 0 1.6919391-.763981 3.2054409-1.9657923 4.2143547 2.8923661 1.2249103 5.0173178 3.9077692 5.4532779 7.1269995.0027529.0172699.0050636.0346873.0069201.0522401A9.07834213 9.07834213 0 0 1 21.0075481 20H21c0 .5522847-.4477153 1-1 1H4z\"/>\n  </cdr-icon> \n  ... \n</template> \n \n<script> \n@import { CdrIcon } from '@rei/cdr-icon'; \n \n...\n  components: {\n    CdrIcon\n  }\n...\n \n</script> \n```",
			"examples": "",
			"tmplTblData": "### <button class='title'>PROPS, METHODS, EVENTS, SLOTS</button>\n\nProp Name | Type | Default | Require | Description\n--- | --- | --- | --- | ---\nuse | string | n/a | false | The href attribute passed to the use element. Will be prefixed with # automatically\n\nSlot | Description\n--- | ---\ndefault | any valid svg xml\n",
			"version": "0.2.0"
		}
	]
}
